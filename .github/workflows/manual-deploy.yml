name: Manually deploy your code

on:
  workflow_dispatch:
    inputs:
        environment:
          description: 'Define env name'     
          required: false
          default: 'prod'

jobs:
  server:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
        with:
          ref: ${{ github.ref }}

      - name: Add api remote origin
        run: |
          git remote add heroku-server https://heroku:${{ secrets.HEROKU_BACKEND_API_KEY }}@git.heroku.com/${{ secrets.HEROKU_BACKEND_APP_NAME }}.git
      - name: Deploy api to Heroku
        run: |
          git push heroku-server `git subtree split --prefix server main`:main --force
  # client:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v1
  #       with:
  #         ref: ${{ github.ref }}

  #     - name: Add api remote origin
  #       run: |
  #         git remote add heroku-client https://heroku:${{ secrets.HEROKU_FRONTEND_API_KEY }}@git.heroku.com/${{ secrets.HEROKU_FRONTEND_APP_NAME }}.git
  #     - name: Deploy api to Heroku
  #       run: |
  #         git push heroku-client `git subtree split --prefix client main`:main --force
    
  # server:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #       with:
  #         ref: ${{ github.ref }}
  #     - name: Get branch name
  #       id: vars
  #       run: echo ::set-output name=short_ref::${GITHUB_REF#refs/*/}

  #     - name: Set branch name
  #       run: echo ${{ steps.vars.outputs.short_ref }}
  #     - name: Heroku login credentials
  #       run: |
  #         cat > ~/.netrc <<EOF
  #           machine api.heroku.com
  #             login $HEROKU_EMAIL
  #             password $HEROKU_API_KEY
  #           machine git.heroku.com
  #             login $HEROKU_EMAIL
  #             password $HEROKU_API_KEY
  #         EOF
  #       env:
  #         HEROKU_API_KEY: ${{ secrets.HEROKU_BACKEND_API_KEY }}
  #         HEROKU_EMAIL: ${{ secrets.HEROKU_BACKEND_EMAIL }}
  #     - name: Add Heroku remote
  #       run: heroku git:remote --app $HEROKU_BACKEND_APP_NAME
  #       env:
  #         HEROKU_BACKEND_APP_NAME: ${{ secrets.HEROKU_BACKEND_APP_NAME }}
  #     - name: Push to Heroku
  #       # run: echo git push heroku `git subtree split --prefix server $BRANCH_NAME`:master
  #       run: git subtree push --prefix server heroku main
  #       # run: eval git subtree push --prefix server heroku $BRANCH_NAME:main
  #       env:
  #         BRANCH_NAME: ${{ steps.vars.outputs.short_ref }}

  # client:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Get branch name
  #       id: vars
  #       run: echo ::set-output name=short_ref::${GITHUB_REF#refs/*/}

  #     - name: Set branch name
  #       run: echo ${{ steps.vars.outputs.short_ref }}
  #     - name: Heroku login credentials
  #       run: |
  #         cat > ~/.netrc <<EOF
  #           machine api.heroku.com
  #             login $HEROKU_EMAIL
  #             password $HEROKU_API_KEY
  #           machine git.heroku.com
  #             login $HEROKU_EMAIL
  #             password $HEROKU_API_KEY
  #         EOF
  #       env:
  #         HEROKU_API_KEY: ${{ secrets.HEROKU_FRONTEND_API_KEY }}
  #         HEROKU_EMAIL: ${{ secrets.HEROKU_FRONTEND_EMAIL }}
  #     - name: Add Heroku remote
  #       run: heroku git:remote --app $HEROKU_FRONTEND_APP_NAME
  #       env:
  #         HEROKU_FRONTEND_APP_NAME: ${{ secrets.HEROKU_FRONTEND_APP_NAME }}
  #     - name: Push to Heroku
  #       run: eval git subtree push --prefix client heroku $BRANCH_NAME:main
  #       env:
  #         BRANCH_NAME: ${{ steps.vars.outputs.short_ref }}